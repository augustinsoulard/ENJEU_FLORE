baseflor_bryoTAXREFv16 <- read.csv("D:/Github/BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
View(baseflor_bryoTAXREFv16)
baseflor_bryoTAXREFv16 <- read.csv("D:/Github/BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
View(baseflor_bryoTAXREFv16)
#Ajout de baseflor
baseflor_bryoTAXREFv16 <- read.csv("../../BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
#Ajout de baseflor
baseflor_bryoTAXREFv16 <- read.csv("../../../BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
baseflor_bryoTAXREFv16 %>% select(CD_NOM,floraison,ecologie = CARACTERISATION_ECOLOGIQUE_.HABITAT_OPTIMAL., syntaxon = INDICATION_PHYTOSOCIOLOGIQUE_CARACTERISTIQUE)
if(!require("tidyverse")){install.packages("tidyverse")} ; library("tidyverse")
baseflor_bryoTAXREFv16 %>% select(CD_NOM,floraison,ecologie = CARACTERISATION_ECOLOGIQUE_.HABITAT_OPTIMAL., syntaxon = INDICATION_PHYTOSOCIOLOGIQUE_CARACTERISTIQUE)
baseflor_bryoTAXREFv16 = baseflor_bryoTAXREFv16 %>% select(CD_NOM,floraison,ecologie = CARACTERISATION_ECOLOGIQUE_.HABITAT_OPTIMAL., syntaxon = INDICATION_PHYTOSOCIOLOGIQUE_CARACTERISTIQUE)
#Ajout de baseflor
baseflor_bryoTAXREFv16 <- read.csv("../../../BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
baseflor_bryoTAXREFv16 = baseflor_bryoTAXREFv16 %>% select(CD_NOM,floraison,ecologie = CARACTERISATION_ECOLOGIQUE_.HABITAT_OPTIMAL., syntaxon = INDICATION_PHYTOSOCIOLOGIQUE_CARACTERISTIQUE)
View(baseflor_bryoTAXREFv16)
# Fonction pour remplacer un chiffre par un mois
remplacer_chiffre_par_mois <- function(chiffre) {
mois <- switch(chiffre,
"1" = "Janvier",
"2" = "Février",
"3" = "Mars",
"4" = "Avril",
"5" = "Mai",
"6" = "Juin",
"7" = "Juillet",
"8" = "Août",
"9" = "Septembre",
"10" = "Octobre",
"11" = "Novembre",
"12" = "Décembre",
"non valide")
return(mois)
}
sapply(strsplit(as.character(baseflor_bryoTAXREFv16$floraison), "-"), function(x) paste(remplacer_chiffre_par_mois(x), collapse = "-"))
# Vecteur de correspondance des chiffres aux mois
correspondance_mois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
# Fonction pour remplacer un chiffre par un mois
remplacer_chiffre_par_mois <- function(chiffre) {
chiffres <- as.numeric(unlist(strsplit(chiffre, "-")))
mois <- paste(correspondance_mois[chiffres], collapse = "-")
return(mois)
}
# Vecteur de correspondance des chiffres aux mois
correspondance_mois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
# Fonction pour remplacer un chiffre par un mois
remplacer_chiffre_par_mois <- function(chiffre) {
chiffres <- as.numeric(unlist(strsplit(chiffre, "-")))
mois <- paste(correspondance_mois[chiffres], collapse = "-")
return(mois)
}
sapply(baseflor_bryoTAXREFv16$floraison, remplacer_chiffre_par_mois)
# Appliquer la fonction sur la colonne du dataframe
baseflor_bryoTAXREFv16$floraison <- sapply(baseflor_bryoTAXREFv16$floraison, remplacer_chiffre_par_mois)
View(baseflor_bryoTAXREFv16)
# jointure avec le
joinTAXREF_baseflor = left_join(TAXREFv17_FLORE_JOIN,baseflor_bryoTAXREFv16,by="CD_NOM")
View(joinTAXREF_baseflor)
View(joinTAXREF_baseflor)
# Definition du repertoire de fichiers
WD = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(WD)
# Charger les bibliotheques necessaires
if(!require("readxl")){install.packages("readxl")} ; library("readxl")
if(!require("xlsx")){install.packages("xlsx")} ; library("xlsx")
# Import de TAXREFv17
TAXREFv17_FLORE_FR <- read.csv("../../../BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF/TAXREFv17_FLORE_FR.csv")
TAXREFv17_FLORE_FR$CD_NOM = as.character(TAXREFv17_FLORE_FR$CD_NOM)
# Filtre de la base de connaissance pour la flore
BDC_STATUTS_17_FLORE = BDC_STATUTS_17 %>%
filter(BDC_STATUTS_17$CD_NOM %in% TAXREFv17_FLORE_FR$CD_REF) %>%
filter(LB_ADM_TR %in% c("Monde","Europe") | CD_ISO3166_1 %in% c("FXX","FRA") |
CD_ISO3166_2 %in% c("FR-13","FR-04","FR-05","FR-06","FR-83","FR-84","FR-U"))
#Creer le futur nom des colonnes
BDC_STATUTS_17_FLORE$LB_STATUT_COL = make.names(paste0(BDC_STATUTS_17_FLORE$LB_TYPE_STATUT,"_",
BDC_STATUTS_17_FLORE$LB_ADM_TR))
# Traitement du tableau pour l'horizontaliser
TAXREFv17_FLORE_JOIN = TAXREFv17_FLORE_FR
for(i in 1:length(levels(as.factor(BDC_STATUTS_17_FLORE$LB_STATUT_COL)))){
cat(i,"/",length(levels(as.factor(BDC_STATUTS_17_FLORE$LB_STATUT_COL))),"\n")
LB_STATUT = levels(as.factor(BDC_STATUTS_17_FLORE$LB_STATUT_COL))[i]
BDC_WORFLOW = BDC_STATUTS_17_FLORE %>%
filter(BDC_STATUTS_17_FLORE$LB_STATUT_COL %in% LB_STATUT)
BDC_TO_JOIN = BDC_WORFLOW %>%
distinct(CD_NOM, .keep_all = TRUE) %>%
select(CD_NOM, CODE_STATUT) %>%
rename(!!LB_STATUT := CODE_STATUT)
#Jointure avec le TAXREF
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,BDC_TO_JOIN,by=c("CD_REF"="CD_NOM"))
}
#### Ajout des plantes indicatrices ZH et des EEEs
#Chargement flore ZH
FloreZH = read.csv("../../../01_MINI_OUTILS/ZONE_HUMIDE/RfloreZH/FloreZH.csv")
# FloreZH = read.csv("../../../ZONE_HUMIDE/RfloreZH/FloreZH.csv")
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,FloreZH,by=c("CD_REF"="CODE.FVF"))
# Chargement flore EEE
TAB_EVEE_PACA <- read_excel("../../../BDD_FLORE_CONSTRUCT/EEE/PACA/TAB_EVEE_PACA.xlsx")
TAB_EVEE_PACA = TAB_EVEE_PACA %>% select(CD_NOM,categorie_paca)
# Jointure flore EVEE
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,TAB_EVEE_PACA,by=c("CD_REF"="CD_NOM"))
# Chargement enjeu CBN
ENJEU_CBN <- read.csv2("../../HIERARCHISATION_CBN_PACA/WORKFLOW/HIERARCHISATION_ENJEU_RESEDA_TAXREFv17.csv")
ENJEU_CBN$CD_NOM = as.double(ENJEU_CBN$CD_NOM)
ENJEU_CBN = ENJEU_CBN %>% select(CD_NOM,ENJEU_CONSERVATION)
# Jointure enjeu CBN
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,ENJEU_CBN,by=c("CD_REF"="CD_NOM"))
#Selection des colonnes pour le tableau final
TAXREFv17_FLORE_JOIN = TAXREFv17_FLORE_JOIN %>% select(CD_NOM = CD_REF,
TRIGRAMME,
NOM_VALIDE,
NOM_VERN,
FAMILLE,
SOUS_FAMILLE,
INDIGENAT = FR,
EVEE = categorie_paca,
DH = Directive.Habitat_France.métropolitaine,
PN = Protection.nationale_France.métropolitaine,
LRN = Liste.rouge.nationale_France.métropolitaine,
PR = Protection.régionale_Provence.Alpes.Côte.d.Azur,
PR_Corr = Protection.régionale_Provence.Alpes.Côte.d.Azur,
LRR = Liste.rouge.régionale_Provence.Alpes.Côte.d.Azur,
ZNIEFF = ZNIEFF.Déterminantes_Provence.Alpes.Côte.d.Azur,
PD04 = Protection.départementale_Alpes.de.Haute.Provence,
PD05 = Protection.départementale_Hautes.Alpes,
PD06 = Protection.départementale_Alpes.Maritimes,
PD83 = Protection.départementale_Var,
PD84 = Protection.départementale_Vaucluse,
ENJEU_CBN = ENJEU_CONSERVATION,
indicatrice_ZH = INDIC_ZH,
Barcelonne =Convention.de.Barcelone_France.métropolitaine,
Berne = Convention.de.Berne_France.métropolitaine,
Mondiale = Liste.rouge.mondiale_Monde,
Europe = Liste.rouge.européenne_Europe
)
## Mise en forme colonne ZNIEFF
TAXREFv17_FLORE_JOIN[!is.na(TAXREFv17_FLORE_JOIN$ZNIEFF),]$ZNIEFF = "D"
#Création de la colonne Protection AuRA
ProtectionPACA = function(x){
valeur = NULL
if(!is.na(x["PN"]) && x["PN"] != "-"){
valeur = paste0(valeur," ","PN")
}
if(!is.na(x["PR"]) && x["PR"] != "-"){
valeur = paste0(valeur," ","PR")
}
if(!is.na(x["PD04"]) && x["PD04"] != "-"){
valeur = paste0(valeur," ","PD04")
}
if(!is.na(x["PD05"]) && x["PD05"] != "-"){
valeur = paste0(valeur," ","PD05")
}
if(!is.na(x["PD06"]) && x["PD06"] != "-"){
valeur = paste0(valeur," ","PD06")
}
if(!is.na(x["PD83"]) && x["PD83"] != "-"){
valeur = paste0(valeur," ","PD83")
}
if(!is.na(x["PD84"]) && x["PD84"] != "-"){
valeur = paste0(valeur," ","PD84")
}
if(is.null(valeur)){
valeur = "-"
}
return(valeur)
}
TAXREFv17_FLORE_JOIN$PROTECTION_AURA = apply(TAXREFv17_FLORE_JOIN,1,ProtectionPACA)
#Ajout de baseflor
baseflor_bryoTAXREFv16 <- read.csv("../../../BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
baseflor_bryoTAXREFv16 = baseflor_bryoTAXREFv16 %>% select(CD_NOM,floraison,ecologie = CARACTERISATION_ECOLOGIQUE_.HABITAT_OPTIMAL., syntaxon = INDICATION_PHYTOSOCIOLOGIQUE_CARACTERISTIQUE)
# Vecteur de correspondance des chiffres aux mois
correspondance_mois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
# Fonction pour remplacer un chiffre par un mois
remplacer_chiffre_par_mois <- function(chiffre) {
chiffres <- as.numeric(unlist(strsplit(chiffre, "-")))
mois <- paste(correspondance_mois[chiffres], collapse = "-")
return(mois)
}
# Appliquer la fonction sur la colonne du dataframe
baseflor_bryoTAXREFv16$floraison <- sapply(baseflor_bryoTAXREFv16$floraison, remplacer_chiffre_par_mois)
# jointure avec le
joinTAXREF_baseflor = left_join(TAXREFv17_FLORE_JOIN,baseflor_bryoTAXREFv16,by="CD_NOM")
# jointure avec le
typeof(baseflor_bryoTAXREFv16$CD_NOM)
# jointure avec le
baseflor_bryoTAXREFv16$CD_NOM = as.double(baseflor_bryoTAXREFv16$CD_NOM)
joinTAXREF_baseflor = left_join(TAXREFv17_FLORE_JOIN,baseflor_bryoTAXREFv16,by="CD_NOM")
View(baseflor_bryoTAXREFv16)
View(joinTAXREF_baseflor)
TAXREFv17_FLORE_JOIN = joinTAXREF_baseflor
#Enregistrement du tableau a integrer à la methode enjeu PACA
write.csv(TAXREFv17_FLORE_JOIN,file = "TAB_GEN_METH_ENJEU_PACA.csv",row.names = F,fileEncoding = "UTF-8",na="-")
library(readxl)
BDD_FICHE_FLORE <- read_excel("D:/Github/BDD_FLORE_CONSTRUCT/BDD_FICHE_FLORE/BDD_FICHE_FLORE.xlsx")
View(BDD_FICHE_FLORE)
#Ajout de BDD_FICHE_FLORE
BDD_FICHE_FLORE <- read_excel("D:/Github/BDD_FLORE_CONSTRUCT/BDD_FICHE_FLORE/BDD_FICHE_FLORE.xlsx",
sheet = "IMG")
BDD_FICHE_FLORE$TEXTE_LEGEND_IMG
BDD_FICHE_FLORE %>% select(CD_NOM,)
#Ajout de BDD_FICHE_FLORE
BDD_FICHE_FLORE <- read_excel("D:/Github/BDD_FLORE_CONSTRUCT/BDD_FICHE_FLORE/BDD_FICHE_FLORE.xlsx",
sheet = "IMG")
summary(BDD_FICHE_FLORE)
BDD_FICHE_FLORE = BDD_FICHE_FLORE %>% select(CD_NOM,PATH_IMG,TEXTE_LEGEND_IMG)
joinbaseflor = left_join(TAXREFv17_FLORE_JOIN,baseflor_bryoTAXREFv16,by="CD_NOM")
# jointure avec le reste du tableau
baseflor_bryoTAXREFv16$CD_NOM = as.double(baseflor_bryoTAXREFv16$CD_NOM)
joinbaseflor = left_join(TAXREFv17_FLORE_JOIN,baseflor_bryoTAXREFv16,by="CD_NOM")
#Ajout de BDD_FICHE_FLORE
BDD_FICHE_FLORE <- read_excel("D:/Github/BDD_FLORE_CONSTRUCT/BDD_FICHE_FLORE/BDD_FICHE_FLORE.xlsx",
sheet = "IMG")
BDD_FICHE_FLORE = BDD_FICHE_FLORE %>% select(CD_NOM,PATH_IMG,TEXTE_LEGEND_IMG)
join_BDD_IMG = left_join(joinbaseflor,baseflor_bryoTAXREFv16,by="CD_NOM")
TAXREFv17_FLORE_JOIN = join_BDD_IMG
View(TAXREFv17_FLORE_JOIN)
TAXREFv17_FLORE_FR$CD_NOM = as.character(TAXREFv17_FLORE_FR$CD_NOM)
# Filtre de la base de connaissance pour la flore
BDC_STATUTS_17_FLORE = BDC_STATUTS_17 %>%
filter(BDC_STATUTS_17$CD_NOM %in% TAXREFv17_FLORE_FR$CD_REF) %>%
filter(LB_ADM_TR %in% c("Monde","Europe") | CD_ISO3166_1 %in% c("FXX","FRA") |
CD_ISO3166_2 %in% c("FR-13","FR-04","FR-05","FR-06","FR-83","FR-84","FR-U"))
#Creer le futur nom des colonnes
BDC_STATUTS_17_FLORE$LB_STATUT_COL = make.names(paste0(BDC_STATUTS_17_FLORE$LB_TYPE_STATUT,"_",
BDC_STATUTS_17_FLORE$LB_ADM_TR))
# Traitement du tableau pour l'horizontaliser
TAXREFv17_FLORE_JOIN = TAXREFv17_FLORE_FR
for(i in 1:length(levels(as.factor(BDC_STATUTS_17_FLORE$LB_STATUT_COL)))){
cat(i,"/",length(levels(as.factor(BDC_STATUTS_17_FLORE$LB_STATUT_COL))),"\n")
LB_STATUT = levels(as.factor(BDC_STATUTS_17_FLORE$LB_STATUT_COL))[i]
BDC_WORFLOW = BDC_STATUTS_17_FLORE %>%
filter(BDC_STATUTS_17_FLORE$LB_STATUT_COL %in% LB_STATUT)
BDC_TO_JOIN = BDC_WORFLOW %>%
distinct(CD_NOM, .keep_all = TRUE) %>%
select(CD_NOM, CODE_STATUT) %>%
rename(!!LB_STATUT := CODE_STATUT)
#Jointure avec le TAXREF
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,BDC_TO_JOIN,by=c("CD_REF"="CD_NOM"))
}
#### Ajout des plantes indicatrices ZH et des EEEs
#Chargement flore ZH
FloreZH = read.csv("../../../01_MINI_OUTILS/ZONE_HUMIDE/RfloreZH/FloreZH.csv")
# FloreZH = read.csv("../../../ZONE_HUMIDE/RfloreZH/FloreZH.csv")
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,FloreZH,by=c("CD_REF"="CODE.FVF"))
# Chargement flore EEE
TAB_EVEE_PACA <- read_excel("../../../BDD_FLORE_CONSTRUCT/EEE/PACA/TAB_EVEE_PACA.xlsx")
TAB_EVEE_PACA = TAB_EVEE_PACA %>% select(CD_NOM,categorie_paca)
# Jointure flore EVEE
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,TAB_EVEE_PACA,by=c("CD_REF"="CD_NOM"))
# Chargement enjeu CBN
ENJEU_CBN <- read.csv2("../../HIERARCHISATION_CBN_PACA/WORKFLOW/HIERARCHISATION_ENJEU_RESEDA_TAXREFv17.csv")
ENJEU_CBN$CD_NOM = as.double(ENJEU_CBN$CD_NOM)
ENJEU_CBN = ENJEU_CBN %>% select(CD_NOM,ENJEU_CONSERVATION)
# Jointure enjeu CBN
TAXREFv17_FLORE_JOIN = left_join(TAXREFv17_FLORE_JOIN,ENJEU_CBN,by=c("CD_REF"="CD_NOM"))
#Selection des colonnes pour le tableau final
TAXREFv17_FLORE_JOIN = TAXREFv17_FLORE_JOIN %>% select(CD_NOM = CD_REF,
TRIGRAMME,
NOM_VALIDE,
NOM_VERN,
FAMILLE,
SOUS_FAMILLE,
INDIGENAT = FR,
EVEE = categorie_paca,
DH = Directive.Habitat_France.métropolitaine,
PN = Protection.nationale_France.métropolitaine,
LRN = Liste.rouge.nationale_France.métropolitaine,
PR = Protection.régionale_Provence.Alpes.Côte.d.Azur,
PR_Corr = Protection.régionale_Provence.Alpes.Côte.d.Azur,
LRR = Liste.rouge.régionale_Provence.Alpes.Côte.d.Azur,
ZNIEFF = ZNIEFF.Déterminantes_Provence.Alpes.Côte.d.Azur,
PD04 = Protection.départementale_Alpes.de.Haute.Provence,
PD05 = Protection.départementale_Hautes.Alpes,
PD06 = Protection.départementale_Alpes.Maritimes,
PD83 = Protection.départementale_Var,
PD84 = Protection.départementale_Vaucluse,
ENJEU_CBN = ENJEU_CONSERVATION,
indicatrice_ZH = INDIC_ZH,
Barcelonne =Convention.de.Barcelone_France.métropolitaine,
Berne = Convention.de.Berne_France.métropolitaine,
Mondiale = Liste.rouge.mondiale_Monde,
Europe = Liste.rouge.européenne_Europe
)
## Mise en forme colonne ZNIEFF
TAXREFv17_FLORE_JOIN[!is.na(TAXREFv17_FLORE_JOIN$ZNIEFF),]$ZNIEFF = "D"
#Création de la colonne Protection AuRA
ProtectionPACA = function(x){
valeur = NULL
if(!is.na(x["PN"]) && x["PN"] != "-"){
valeur = paste0(valeur," ","PN")
}
if(!is.na(x["PR"]) && x["PR"] != "-"){
valeur = paste0(valeur," ","PR")
}
if(!is.na(x["PD04"]) && x["PD04"] != "-"){
valeur = paste0(valeur," ","PD04")
}
if(!is.na(x["PD05"]) && x["PD05"] != "-"){
valeur = paste0(valeur," ","PD05")
}
if(!is.na(x["PD06"]) && x["PD06"] != "-"){
valeur = paste0(valeur," ","PD06")
}
if(!is.na(x["PD83"]) && x["PD83"] != "-"){
valeur = paste0(valeur," ","PD83")
}
if(!is.na(x["PD84"]) && x["PD84"] != "-"){
valeur = paste0(valeur," ","PD84")
}
if(is.null(valeur)){
valeur = "-"
}
return(valeur)
}
TAXREFv17_FLORE_JOIN$PROTECTION_AURA = apply(TAXREFv17_FLORE_JOIN,1,ProtectionPACA)
###############Ajout de baseflor################
baseflor_bryoTAXREFv16 <- read.csv("../../../BDD_FLORE_CONSTRUCT/TAXONOMIE/TAXREF-MATCH-BASEFLOR/baseflor_bryoTAXREFv16.csv", sep=";")
baseflor_bryoTAXREFv16 = baseflor_bryoTAXREFv16 %>% select(CD_NOM,floraison,ecologie = CARACTERISATION_ECOLOGIQUE_.HABITAT_OPTIMAL., syntaxon = INDICATION_PHYTOSOCIOLOGIQUE_CARACTERISTIQUE)
# Vecteur de correspondance des chiffres aux mois
correspondance_mois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
# Fonction pour remplacer un chiffre par un mois
remplacer_chiffre_par_mois <- function(chiffre) {
chiffres <- as.numeric(unlist(strsplit(chiffre, "-")))
mois <- paste(correspondance_mois[chiffres], collapse = "-")
return(mois)
}
# Appliquer la fonction sur la colonne du dataframe
baseflor_bryoTAXREFv16$floraison <- sapply(baseflor_bryoTAXREFv16$floraison, remplacer_chiffre_par_mois)
# jointure avec le reste du tableau
baseflor_bryoTAXREFv16$CD_NOM = as.double(baseflor_bryoTAXREFv16$CD_NOM)
joinbaseflor = left_join(TAXREFv17_FLORE_JOIN,baseflor_bryoTAXREFv16,by="CD_NOM")
#Ajout de BDD_FICHE_FLORE
BDD_FICHE_FLORE <- read_excel("D:/Github/BDD_FLORE_CONSTRUCT/BDD_FICHE_FLORE/BDD_FICHE_FLORE.xlsx",
sheet = "IMG")
BDD_FICHE_FLORE = BDD_FICHE_FLORE %>% select(CD_NOM,PATH_IMG,TEXTE_LEGEND_IMG)
join_BDD_IMG = left_join(joinbaseflor,BDD_FICHE_FLORE,by="CD_NOM")
View(BDD_FICHE_FLORE)
View(TAXREFv17_FLORE_JOIN)
View(join_BDD_IMG)
TAB_TO_EXPORT=join_BDD_IMG
#Enregistrement du tableau a integrer à la methode enjeu PACA
write.csv(TAB_TO_EXPORT,file = "TAB_GEN_METH_ENJEU_PACA.csv",row.names = F,fileEncoding = "UTF-8",na="-")
